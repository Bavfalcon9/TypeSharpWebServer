import { http, fs } from 'std';
import { TSML } from 'typesharp';

function main(): void {
     const markupLangServer = new TSML.Server();
     const httpServer = new http.Server({
          socketAddr: [ "127.0.01", 8080 ]
     });

     let server: http.Server = httpServer.serve();

     if (server.err) {
          eprintln!("Error in server thread: " + server.err.asString());
     }

     @thread({ sharing: true, immediate: true })
     function markupServer(): Future<void> {
          markupLangServer.bind(httpServer);
          markupLangServer.useFolder('./tsml');

          for (const request of markupLangServer) {
               // route
               if (request.path === "/") {
                    request.render('home'); // this can throw an error if Home.tsml is not found!
               } else {
                    request.render('404', { fileName: request.path });
               }
          }
     }
}